(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{293:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"指定测试项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定测试项目"}},[t._v("#")]),t._v(" 指定测试项目")]),t._v(" "),a("h2",{attrs:{id:"为什么要指定测试项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要指定测试项目"}},[t._v("#")]),t._v(" 为什么要指定测试项目？")]),t._v(" "),a("p",[t._v("为了能够将多个项目同时使用此套框架，而设计的这种模式，它从初始就被应用到我的所有开源自动化测试项目中")]),t._v(" "),a("h2",{attrs:{id:"它如何工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#它如何工作"}},[t._v("#")]),t._v(" 它如何工作？")]),t._v(" "),a("ol",[a("li",[t._v("在主的 test_case 目录下的一级目录视为单个项目目录，如 demo 中的 test_project 目录， 就等于是 test_project\n这个项目，需要在此项目目录下存放该项目所有相关的测试用例")]),t._v(" "),a("li",[t._v("测试数据文件同样使用此规则，在 data > test_data > yaml_data 目录下的一级目录视为单个项目目录，如 demo 中的\ntest_project 目录， 就等于是 test_project 这个项目，需要在此项目目录下存放该项目所有相关的测试数据")])])])}),[],!1,null,null,null);a.default=r.exports}}]);